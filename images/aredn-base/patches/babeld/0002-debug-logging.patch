From 6491cbe895c93fab3e3b0c2e905b5f33669fa6bf Mon Sep 17 00:00:00 2001
From: Jacob McSwain <jacob@mcswain.dev>
Date: Tue, 18 Feb 2025 21:05:22 -0600
Subject: [PATCH 2/6] debug logging

---
 kernel_netlink.c | 21 +++++++++++++++++----
 neighbour.c      |  3 +--
 xroute.c         |  3 +++
 3 files changed, 21 insertions(+), 6 deletions(-)

diff --git a/kernel_netlink.c b/kernel_netlink.c
index 6ee991d..54ddfec 100644
--- a/kernel_netlink.c
+++ b/kernel_netlink.c
@@ -985,6 +985,13 @@ kernel_route(int operation, int table,
         }
     }
 
+    kdebugf("kernel_route (before): %s %s from %s "
+            "table %d metric %d dev %d nexthop %s\n",
+            operation == ROUTE_ADD ? "add" :
+            operation == ROUTE_FLUSH ? "flush" : "???",
+            format_prefix(dest, plen), format_prefix(src, src_plen),
+            table, metric, ifindex, format_address(gate));
+
     /* Check that the protocol family is consistent. */
     if(plen >= 96 && v4mapped(dest)) {
         if(!v4mapped(src)) {
@@ -1210,19 +1217,19 @@ print_kernel_route(int add, int protocol, int type,
                   addr_prefix, sizeof(addr_prefix)) ||
        !inet_ntop(AF_INET6,route->gw, addr_gw, sizeof(addr_gw)) ||
        !if_indextoname(route->ifindex, ifname)) {
-        kdebugf("Couldn't format kernel route for printing.");
+        kdebugf("Couldn't format kernel route for printing.\n");
         return;
     }
 
     if(route->src_plen >= 0) {
         if(!inet_ntop(AF_INET6, route->src_prefix,
                       src_addr_prefix, sizeof(src_addr_prefix))) {
-            kdebugf("Couldn't format kernel route for printing.");
+            kdebugf("Couldn't format kernel route for printing.\n");
             return;
         }
 
         kdebugf("%s kernel route: dest: %s/%d gw: %s metric: %d if: %s "
-                "(proto: %d, type: %d, from: %s/%d)",
+                "(proto: %d, type: %d, from: %s/%d)\n",
                 add == RTM_NEWROUTE ? "Add" : "Delete",
                 addr_prefix, route->plen, addr_gw, route->metric, ifname,
                 protocol, type, src_addr_prefix, route->src_plen);
@@ -1230,7 +1237,7 @@ print_kernel_route(int add, int protocol, int type,
     }
 
     kdebugf("%s kernel route: dest: %s/%d gw: %s metric: %d if: %s "
-            "(proto: %d, type: %d)",
+            "(proto: %d, type: %d)\n",
             add == RTM_NEWROUTE ? "Add" : "Delete",
             addr_prefix, route->plen, addr_gw, route->metric, ifname,
             protocol, type);
@@ -1242,6 +1249,8 @@ filter_kernel_routes(struct nlmsghdr *nh, struct kernel_route *route)
     int rc, len;
     struct rtmsg *rtm;
 
+    kdebugf("filter_kernel_routes:\n");
+
     len = nh->nlmsg_len;
 
     if(nh->nlmsg_type != RTM_NEWROUTE &&
@@ -1251,6 +1260,8 @@ filter_kernel_routes(struct nlmsghdr *nh, struct kernel_route *route)
     rtm = (struct rtmsg*)NLMSG_DATA(nh);
     len -= NLMSG_LENGTH(0);
 
+    print_kernel_route(nh->nlmsg_type, rtm->rtm_protocol, rtm->rtm_type, route);
+
     if(rtm->rtm_protocol == RTPROT_BABEL)
         return 0;
 
@@ -1273,6 +1284,8 @@ filter_kernel_routes(struct nlmsghdr *nh, struct kernel_route *route)
         }
     }
 
+    kdebugf("filter_kernel_routes: route ok\n");
+
     return 1;
 
 }
diff --git a/neighbour.c b/neighbour.c
index d47100c..5a7d123 100644
--- a/neighbour.c
+++ b/neighbour.c
@@ -159,8 +159,7 @@ update_neighbour(struct neighbour *neigh, struct hello_history *hist,
             } else if(missed_hellos < 0) {
                 /* Late hello. Probably due to the link layer buffering
                    packets during a link outage or a cpu overload. */
-                   fprintf(stderr,
-                        "Late hello: bufferbloated neighbor %s\n",
+                   debugf("Late hello: bufferbloated neighbor %s\n",
                          format_address(neigh->address));
                 hist->reach <<= -missed_hellos;
                 missed_hellos = 0;
diff --git a/xroute.c b/xroute.c
index fb881ea..332fe16 100644
--- a/xroute.c
+++ b/xroute.c
@@ -541,6 +541,9 @@ check_xroutes(int send_updates, int warn)
     free(routes);
     /* Set up maxroutes for the next call. */
     maxroutes = MIN(numroutes + 8, maxmaxroutes);
+
+    debugf("\nChecking kernel routes - done.\n");
+
     return change;
 
  resize:
-- 
2.48.1

