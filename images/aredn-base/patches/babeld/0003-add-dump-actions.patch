From 92d3ab31204346c14040082bac965b4705e5c2d5 Mon Sep 17 00:00:00 2001
From: Jacob McSwain <jacob@mcswain.dev>
Date: Tue, 18 Feb 2025 21:06:23 -0600
Subject: [PATCH 3/6] add dump actions

---
 configuration.c | 15 +++++++++++++++
 configuration.h |  5 ++++-
 local.c         | 30 ++++++++++++++++++++++++++++++
 3 files changed, 49 insertions(+), 1 deletion(-)

diff --git a/configuration.c b/configuration.c
index 5312f6b..7824221 100644
--- a/configuration.c
+++ b/configuration.c
@@ -979,6 +979,21 @@ parse_config_line(int c, gnc_t gnc, void *closure,
         if(c < -1 || !action_return)
             goto fail;
         *action_return = CONFIG_ACTION_DUMP;
+    } else if(strcmp(token, "dump-interfaces") == 0) {
+        c = skip_eol(c, gnc, closure);
+        if(c < -1 || !action_return)
+            goto fail;
+        *action_return = CONFIG_ACTION_DUMP_INTERFACES;
+    } else if(strcmp(token, "dump-neighbors") == 0) {
+        c = skip_eol(c, gnc, closure);
+        if(c < -1 || !action_return)
+            goto fail;
+        *action_return = CONFIG_ACTION_DUMP_NEIGHBORS;
+     } else if(strcmp(token, "dump-routable-neighbors") == 0) {
+        c = skip_eol(c, gnc, closure);
+        if(c < -1 || !action_return)
+            goto fail;
+        *action_return = CONFIG_ACTION_DUMP_ROUTABLE_NEIGHBORS;
     } else if(strcmp(token, "monitor") == 0) {
         c = skip_eol(c, gnc, closure);
         if(c < -1 || !action_return)
diff --git a/configuration.h b/configuration.h
index defc03a..f288791 100644
--- a/configuration.h
+++ b/configuration.h
@@ -27,7 +27,10 @@ THE SOFTWARE.
 #define CONFIG_ACTION_DUMP 2
 #define CONFIG_ACTION_MONITOR 3
 #define CONFIG_ACTION_UNMONITOR 4
-#define CONFIG_ACTION_NO 5
+#define CONFIG_ACTION_DUMP_INTERFACES 5
+#define CONFIG_ACTION_DUMP_NEIGHBORS 6
+#define CONFIG_ACTION_DUMP_ROUTABLE_NEIGHBORS 7
+#define CONFIG_ACTION_NO 8
 
 #define AUTH_TYPE_NONE 0
 
diff --git a/local.c b/local.c
index d4103c4..5cee0fe 100644
--- a/local.c
+++ b/local.c
@@ -322,6 +322,9 @@ local_read(struct local_socket *s)
     char *eol;
     char reply[100] = "ok\n";
     const char *message = NULL;
+    struct interface *ifp;
+    struct neighbour *neigh;
+    struct route_stream *routes;
 
     if(s->buf == NULL)
         s->buf = malloc(LOCAL_BUFSIZE);
@@ -355,6 +358,16 @@ local_read(struct local_socket *s)
         case CONFIG_ACTION_DUMP:
             local_notify_all_1(s);
             break;
+        case CONFIG_ACTION_DUMP_INTERFACES:
+            FOR_ALL_INTERFACES(ifp) {
+                local_notify_interface_1(s, ifp, LOCAL_ADD);
+            }
+            break;
+        case CONFIG_ACTION_DUMP_NEIGHBORS:
+            FOR_ALL_NEIGHBOURS(neigh) {
+                local_notify_neighbour_1(s, neigh, LOCAL_ADD);
+            }
+            break;
         case CONFIG_ACTION_MONITOR:
             local_notify_all_1(s);
             s->monitor = 1;
@@ -362,6 +375,23 @@ local_read(struct local_socket *s)
         case CONFIG_ACTION_UNMONITOR:
             s->monitor = 0;
             break;
+        case CONFIG_ACTION_DUMP_ROUTABLE_NEIGHBORS:
+            FOR_ALL_NEIGHBOURS(neigh) {
+                routes = route_stream(1);
+                if(routes) {
+                    while(1) {
+                        struct babel_route *route = route_stream_next(routes);
+                        if(route == NULL)
+                            break;
+                        if(route->neigh == neigh) {
+                            local_notify_neighbour_1(s, route->neigh, LOCAL_ADD);
+                            break;
+                        }
+                    }
+                    route_stream_done(routes);
+                }
+            }
+            break;
         case CONFIG_ACTION_NO:
             snprintf(reply, sizeof(reply), "no%s%s\n",
                      message ? " " : "", message ? message : "");
-- 
2.48.1

